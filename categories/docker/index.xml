<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on DaoyiSite</title>
    <link>https://daotoyi.github.io/categories/docker/</link>
    <description>Recent content in Docker on DaoyiSite</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Mar 2022 09:56:00 +0800</lastBuildDate>
    
	<atom:link href="https://daotoyi.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker daemon</title>
      <link>https://daotoyi.github.io/post/docker-daemon/</link>
      <pubDate>Thu, 03 Mar 2022 09:56:00 +0800</pubDate>
      
      <guid>https://daotoyi.github.io/post/docker-daemon/</guid>
      <description>startup error 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # systemctl status docker ● docker.service - Docker Application Container Engine Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled) Active: failed (Result: exit-code) since Wed 2022-03-02 13:52:17 UTC; 2min 57s ago Docs: https://docs.docker.com Process: 8646 ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock (code=exited, status=1/FAILURE) Main PID: 8646 (code=exited, status=1/FAILURE) Mar 02 13:52:17 instance-1 systemd[1]: docker.service: Service hold-off time</description>
    </item>
    
    <item>
      <title>Docker 远程访问</title>
      <link>https://daotoyi.github.io/post/docker-remote-access/</link>
      <pubDate>Thu, 03 Mar 2022 09:54:00 +0800</pubDate>
      
      <guid>https://daotoyi.github.io/post/docker-remote-access/</guid>
      <description>默认情况下，Docker 守护进程会生成一个 socket 文件来进行本地进程通信，而不会监听任何端口，因此只能在本地使用 docker 客户端或者使用 Docker API 进行操作。 如果</description>
    </item>
    
    <item>
      <title>Docker 使用镜像</title>
      <link>https://daotoyi.github.io/post/docker-operation-manual/</link>
      <pubDate>Sun, 27 Feb 2022 11:53:00 +0800</pubDate>
      
      <guid>https://daotoyi.github.io/post/docker-operation-manual/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from [2022-02-27 周日 11:53] Docker 容器（containers）是从 Docker 镜像生成出来的。默认情况下，Docker 从 Docker Hub 下载这些镜像，Docker 公司在运营这个 Docker H</description>
    </item>
    
    <item>
      <title>Docker 初识</title>
      <link>https://daotoyi.github.io/post/docker-instruction/</link>
      <pubDate>Sun, 27 Feb 2022 11:53:00 +0800</pubDate>
      
      <guid>https://daotoyi.github.io/post/docker-instruction/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from [2022-02-27 周日 11:53] Docker 是一个开源的应用容器引擎。Docker 可以让开发者打包他们创建的应用以及相应的依赖包到一个可移植、轻量级的容器中。Docke</description>
    </item>
    
    <item>
      <title>Docker 提交推送</title>
      <link>https://daotoyi.github.io/post/docker-push-to-dockerhub/</link>
      <pubDate>Sun, 27 Feb 2022 11:53:00 +0800</pubDate>
      
      <guid>https://daotoyi.github.io/post/docker-push-to-dockerhub/</guid>
      <description>State &amp;ldquo;DONE&amp;rdquo; from [2022-02-27 周日 11:53] Docker commit 1 docker commit -m &amp;#34;What you did to the image&amp;#34; -a &amp;#34;Author Name&amp;#34; container_id repository/new_image_name -m 是提交镜像的备注 -a 用于指定作者名 container_id 是 Docker Hub 用户名 当我们提交新镜像时，新生成的镜像也会在我们的</description>
    </item>
    
    <item>
      <title>Docker 安装</title>
      <link>https://daotoyi.github.io/post/docker-install-manual/</link>
      <pubDate>Sun, 27 Feb 2022 11:31:01 +0800</pubDate>
      
      <guid>https://daotoyi.github.io/post/docker-install-manual/</guid>
      <description>官方 Ubuntu 存储库中提供的 Docker 安装软件包可能不是最新版本，为了保证是最新版，我们从 Docker 官方库来安装。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 将官方 Docker 版本库的 GPG</description>
    </item>
    
  </channel>
</rss>