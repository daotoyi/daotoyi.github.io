[{"categories":["hardware"],"content":"固态硬盘接口 性能从低到高排序为: SATA 接口 SATA Revision 1.0 SATA Revision 2.0 SATA Revision 3.0 M.2 接口 一种支持 SATA 协议 一种支持 NVME 协议 协议性能更好，走 PCIE 通道，带宽高达 32G PCI-E 接口 直接通过 PCI-E 总线和 CPU 直连，节省通过内存的流程,性能是最强的，理论最高速度达到 32Gbps。 ","date":"2022-02-08","objectID":"/post/hardware/ssd-performance-improvement/:1:0","tags":["AHCI"],"title":"SSD性能提升","uri":"/post/hardware/ssd-performance-improvement/"},{"categories":["hardware"],"content":"AHCI 协议 高级串行 ATA 功能接口标准. 使用机械硬盘时，主板 AHCI 是不打开的。使用速度较高的固态硬盘时，就必须要开启 AHCI 了， 通过 NCQ 功能，提升电脑整体速度 。 ","date":"2022-02-08","objectID":"/post/hardware/ssd-performance-improvement/:2:0","tags":["AHCI"],"title":"SSD性能提升","uri":"/post/hardware/ssd-performance-improvement/"},{"categories":["hardware"],"content":"设置固态硬盘 如果使用的是 SATA 接口，要区分 SATA2.0 接口和 SATA3.0 接口； 如果使用的是 PCI-E 接口，则要确认插槽为全速插槽; 进入主板 BIOS 设置，开启第二点所说的 AHCI 协议，关闭硬盘节能。 设置固态硬盘的 4K 对齐. ","date":"2022-02-08","objectID":"/post/hardware/ssd-performance-improvement/:3:0","tags":["AHCI"],"title":"SSD性能提升","uri":"/post/hardware/ssd-performance-improvement/"},{"categories":["github"],"content":"Git Pages 只能为每个 GitHub 帐户创建一个用户或组织站点；而项目站点没有限制。 用户或组织站点 新建 username.github.io 仓库，将静态网页文件所在分支托管到 Github Pages。 项目站点 新建项目仓库,名称不受限. ","date":"2022-02-07","objectID":"/post/github/github-pages-custome-domain-name-ssl/:0:1","tags":["domain","ssl"],"title":"github-pages托管静态网页绑定自定义域名","uri":"/post/github/github-pages-custome-domain-name-ssl/"},{"categories":["github"],"content":"Domain name 购买域名（aliyun 及 cloud.tencent 默认有免费的解析） 添加域名解析，有两种类型: A A，直接指向 ip，后面的记录值填 ping github page 得到的 ip 地址，但有时候 IP 地址会更改，导致最后解析不正确. 推荐 CNAME 方法 CNAME CNAME，主机记录写@，后面记录值 xxxx.github.io；再添加一条 CNAME，主机记录写 www，后面记录值和前面一样 以下是腾讯云域名(daotoyi.cn)记录: 主机记录 记录类型 线路类型 记录值 TTL note 1 @ A 默认 185.199.109.153 600 type-1 2 @ CNAME 默认 daotoyi.github.io 600 type-2 二级域名 3 www CNAME 默认 daotoyi.github.io 600 1+3 or 2+3 4 jekyll CNAME 默认 daotoyi.github.io 600 CNAME 方法用/不用 www 都能访问网站（www 的方式，会先解析成http://xxxx.github.io，然后根据CNAME再变成http://xxx.com，即中间是经过一次转换的） 绑定完成后的页面请求流程： 访问 xxx.com，由于是 cname，会先找 xxxx.github.io(对应表中 3)，最后由主机记录@找到 ip 进行访问(表中对应 1 或者 2) 二级域名绑定(项目站点) (Source)在 仓库 settings 页面设置 GitHub Pages 托管分支 (Theme Chooser),必须选择一个主题(后期可以更改),**否则可能无法加载**.(手动无语) (Custom domain),设置站点解析的二级域名.(如 jekyll.daotoyi.cn)[对应表格中 4] ","date":"2022-02-07","objectID":"/post/github/github-pages-custome-domain-name-ssl/:0:2","tags":["domain","ssl"],"title":"github-pages托管静态网页绑定自定义域名","uri":"/post/github/github-pages-custome-domain-name-ssl/"},{"categories":["github"],"content":"ssl 使用腾讯云域名片带 1 任何人 SSL 证书. 使用 cloudflare. cloudflare CDN 在国内没有 CDN 节点，但是整体效果是完爆 github.io 要注意的是免费版本是有请求次数限制的，每天 10W 次. ","date":"2022-02-07","objectID":"/post/github/github-pages-custome-domain-name-ssl/:0:3","tags":["domain","ssl"],"title":"github-pages托管静态网页绑定自定义域名","uri":"/post/github/github-pages-custome-domain-name-ssl/"},{"categories":["network"],"content":"DNS（Domain Name System[域名系统]) 万维网上作为域名和 IP 地址相互映射的一个[分布式数据库]能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的 IP 数串。 ","date":"2022-02-07","objectID":"/post/network/doman-name-system/:0:1","tags":["DNS","CNAME","CDN"],"title":"doman-name-system使用总结","uri":"/post/network/doman-name-system/"},{"categories":["network"],"content":"A (Address) 记录 用来指定域名对应的 IP 地址记录。 当多个域名都指向一个网站服务器上时，需要将这些子域名（顶级域名下面的二级域名、三级域名都称之为子域名）设置并指向自己的网站服务器上的，这个动作一般称之为 A 记录，又称 IP 指向。 ","date":"2022-02-07","objectID":"/post/network/doman-name-system/:0:2","tags":["DNS","CNAME","CDN"],"title":"doman-name-system使用总结","uri":"/post/network/doman-name-system/"},{"categories":["network"],"content":"CNAME 别名记录 将多个名字映射到另外一个域名。 简单来说，A记录就是把一个域名解析到一个 IP 地址，而 CNAME 记录就是把域名解析到另外一个域名。 CNAME 提供了单一服务器和海量服务器的在管理访问上的灵活性。单一服务器的场景下，通过将大量子域名指向到 CNAME，再由 CNAME 指向到单一域名，解决了服务器更换、迁移带来的大量域名重新指向的问题。 CNAME 配合负载均衡系统，还可以实现将大量访问需求通过 CNAME 指向到多台服务器，以提高用户访问的速度。 ","date":"2022-02-07","objectID":"/post/network/doman-name-system/:0:3","tags":["DNS","CNAME","CDN"],"title":"doman-name-system使用总结","uri":"/post/network/doman-name-system/"},{"categories":["network"],"content":"CDN（内容分发网络） 主要功能是将原本离用户比较远的源站服务器，通过丰富的节点（缓存服务器）放到离用户最近的地方，实现用户对互联网上资源的快速访问。 ","date":"2022-02-07","objectID":"/post/network/doman-name-system/:0:4","tags":["DNS","CNAME","CDN"],"title":"doman-name-system使用总结","uri":"/post/network/doman-name-system/"},{"categories":["network"],"content":"A - CNAME - CND 流程 点击此处查看 ","date":"2022-02-07","objectID":"/post/network/doman-name-system/:0:5","tags":["DNS","CNAME","CDN"],"title":"doman-name-system使用总结","uri":"/post/network/doman-name-system/"},{"categories":["hugo"],"content":"按不同配置启动 在 development 环境下，可指定以不同的模式启动以预览效果。 hugo --config debugconfig.toml hugo --config a.toml,b.toml,c.toml ","date":"2022-02-06","objectID":"/post/hugo/hugo/:1:0","tags":[],"title":"Hugo使用总结","uri":"/post/hugo/hugo/"},{"categories":["tool"],"content":"常用指令 hotkey M-x （function） note C-c \u0026 C-n yas-new-snippet C-c \u0026 C-s yas-insert-snippet C-c \u0026 C-v yas-visit-snippet-file yas-tryout-snippet test 可以保存到两个地方： ~/.emacs.d/private/snippets/modename-mode/ ~/.spacemacs.d/snippets/modename-mode/ ","date":"2022-02-06","objectID":"/post/emacs/snippets/:0:1","tags":["emacs,","snippet"],"title":"snippets使用小结","uri":"/post/emacs/snippets/"},{"categories":["tool"],"content":"模板说明 #name : #ifndef XXX; #define XXX; #endif # key: once # -- #ifndef ${1:`(upcase (file-name-nondirectory (file-name-sans-extension (or (buffer-file-name) \"\"))))`_H} #define $1 $0 #endif /* $1 */ $0 代码片段中的 $0 表示代码片段填充之后光标最后停的地方，$1 $2 $3… 表示按 TAB 之后光标停的地方。 M-/ 触发 spacemacs 的 TAB 按键被自动补全使用了，可以使用了 M-/ 来触发。 ","date":"2022-02-06","objectID":"/post/emacs/snippets/:0:2","tags":["emacs,","snippet"],"title":"snippets使用小结","uri":"/post/emacs/snippets/"},{"categories":["tool"],"content":"auto-completion 整合 (setq-default dotspacemacs-configuration-layers '((auto-completion :variables auto-completion-enable-snippets-in-popup t))) ","date":"2022-02-06","objectID":"/post/emacs/snippets/:0:3","tags":["emacs,","snippet"],"title":"snippets使用小结","uri":"/post/emacs/snippets/"},{"categories":["github"],"content":"令牌与密码 令牌（token）与密码（password）的作用是一样的，都可以进入系统，但是有三点差异。 令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化。 令牌可以被数据所有者撤销，会立即失效。密码一般不允许被他人撤销。 令牌有权限范围（scope）。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限。 保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全。这就是 OAuth 2.0 的优点。 OAuth 的核心就是向第三方应用颁发令牌。 ","date":"2022-02-05","objectID":"/post/github/oauth/:0:1","tags":[],"title":"Github App 及 OAuth","uri":"/post/github/oauth/"},{"categories":["github"],"content":"获得令牌的流程 OAuth 2.0 规定了四种获得令牌的流程。 授权码（authorization-code） 第三方应用先申请一个授权码，然后再用该码获取令牌。 最常用的流程，安全性也最高，它适用于那些有后端的 Web 应用。 隐藏式（implicit） 允许直接向前端颁发令牌。这种方式没有授权码这个中间步骤，所以称为（授权码）\"隐藏式\"（implicit）。 密码式（password） 如果你高度信任某个应用，RFC 6749 也允许用户把用户名和密码，直接告诉该应用。该应用就使用你的密码，申请令牌，这种方式称为\"密码式\"（password）。 客户端凭证（client credentials） 适用于没有前端的命令行应用，即在命令行下请求令牌。 ","date":"2022-02-05","objectID":"/post/github/oauth/:0:2","tags":[],"title":"Github App 及 OAuth","uri":"/post/github/oauth/"},{"categories":["github"],"content":"第三方登录的原理 所谓第三方登录，实质就是 OAuth 授权。用户想要登录 A 网站，A 网站让用户提供第三方网站的数据，证明自己的身份。获取第三方网站的身份数据，就需要 OAuth 授权。 举例来说，A 网站允许 GitHub 登录，背后就是下面的流程。 A 网站让用户跳转到 GitHub。 GitHub 要求用户登录，然后询问\"A 网站要求获得 xx 权限，你是否同意？\" 用户同意，GitHub 就会重定向回 A 网站，同时发回一个授权码。 A 网站使用授权码，向 GitHub 请求令牌。 GitHub 返回令牌. 6.A 网站使用令牌，向 GitHub 请求用户数据。 ","date":"2022-02-05","objectID":"/post/github/oauth/:0:3","tags":[],"title":"Github App 及 OAuth","uri":"/post/github/oauth/"},{"categories":["github"],"content":"Github App \u0026 OAuth App Github App 可以通过 Github 提供的认证信息去调用 Github API。 OAuth App 所获取的权限都是固定且只读的，用户只能读取固定的数据而不能修改数据； Github App 几乎可以获取 Github 提供的所有功能权限，且所获取的权限可以被设定为“只读”，“可读可写”和“禁止访问”，对于权限的授权粒度会更细。 ","date":"2022-02-05","objectID":"/post/github/oauth/:0:4","tags":[],"title":"Github App 及 OAuth","uri":"/post/github/oauth/"},{"categories":["git"],"content":"fatal: in unpopulated submodule XXX 若是直接从 github 中下载到对应的项目，直接放到自己的版本控制中，在提交就会报此错误 fatal: in unpopulated submodule. 即使删除了.git 文件也是没用的。 解决办法: git rm -rf --cached git add . ","date":"2022-02-05","objectID":"/post/github/github-mannal-issues/:0:1","tags":["git"],"title":"Git使用问题整理","uri":"/post/github/github-mannal-issues/"},{"categories":["git"],"content":"GitHub Actions Workflow refusing to allow an OAuth App to create or update workflow {0} without workflow scope 因为 OAuth 的应用没有指定 workflow 范围，所以无法推送带有更新 workflow 的分支。 refusing to allow a Personal Access Token to create or update workflow GitHub Personal Access Tokens 页面,生成一个新的 Token。特别注意在生成的时候要 勾选 workflow. 在 Windows 凭据管理器(控制面板\\所有控制面板项\\凭据管理器)中，找到 GitHub 的几个凭据，然后编辑： git:https://github.com git:https://usernaem.com 推送的时候如果要求你输入账号密码，输入那个 Token 作为密码即可。 包含 GitHub Actions Workflow 的分支无法推送 ","date":"2022-02-05","objectID":"/post/github/github-mannal-issues/:0:2","tags":["git"],"title":"Git使用问题整理","uri":"/post/github/github-mannal-issues/"},{"categories":["git"],"content":"error: server certificate verification failed. CAfile: /etc/ssl/certs/ca-certificates.crt CRLfile: none 证书校验有问题,解决方法是加一个环境变量; linux export GIT_SSL_NO_VERIFY=1 windows set GIT_SSL_NO_VERIFY 1 之后 git config --global http.sslVerify false ","date":"2022-02-05","objectID":"/post/github/github-mannal-issues/:0:3","tags":["git"],"title":"Git使用问题整理","uri":"/post/github/github-mannal-issues/"},{"categories":null,"content":"LoveIt ","date":"2022-02-05","objectID":"/post/hugo/loveit/:1:0","tags":null,"title":"Hugo主题 LoveIt使用小结","uri":"/post/hugo/loveit/"},{"categories":null,"content":"compatible ","date":"2022-02-05","objectID":"/post/hugo/loveit/:1:1","tags":null,"title":"Hugo主题 LoveIt使用小结","uri":"/post/hugo/loveit/"},{"categories":["hugo"],"content":"config hugo –config debugconfig.toml hugo –config a.toml,b.toml,c.toml ","date":"2022-02-05","objectID":"/post/hugo/even/:0:1","tags":["even"],"title":"Hugo主题even使用小结","uri":"/post/hugo/even/"},{"categories":["hugo"],"content":"commmet 在 even 主题中加入 utterances 创建 repository 在 Github 上新建一个 public repo，用于存储评论内容 配置 config 为了方便配置，把需要的参数都放在 config.toml 文档中，在该文档中加入： [params.utter] repo = \"{githubName}/{repoName}\" issueTerm = \"title\" #设置每篇文章对应的 issue 的名字，可选 pathname title url， theme = \"github-light\" 配置 comments 打开 themes/even/layouts/partials/comments.html，在 gitalk 下面加一个 utterances 的控制结构： {{- if .Site.Params.utter.repo -}} \u003cdiv id=\"utter-container\"\u003e\u003c/div\u003e \u003cscript src=\"https://utteranc.es/client.js\" repo= '{{ .Site.Params.utter.repo }}' issue-term= \"{{ .Site.Params.utter.issueTerm }}\" theme= '{{ .Site.Params.utter.theme }}' crossorigin= \"anonymous\" async\u003e \u003c/script\u003e {{- end }} ","date":"2022-02-05","objectID":"/post/hugo/even/:0:2","tags":["even"],"title":"Hugo主题even使用小结","uri":"/post/hugo/even/"},{"categories":["hugo"],"content":"note 主页面 home 显示(post) 必须在 content 目录下建立 post 目录保存文件,否则 Home 页面识别不到文件. 主页面选项(repositories,about) repositories,about 文件需放在 content 目录下. ","date":"2022-02-05","objectID":"/post/hugo/even/:0:3","tags":["even"],"title":"Hugo主题even使用小结","uri":"/post/hugo/even/"},{"categories":["hugo"],"content":"Github emacs dylayer(spacemacs) emacs.d vim dylayer(spacevim) _vimrc quant dymonitor tools inspectionPro ","date":"2022-02-04","objectID":"/repositories/:1:0","tags":[],"title":"Repositories","uri":"/repositories/"},{"categories":["hugo"],"content":"Gitee vim-plugins easymotion monokai orgmode supertab ","date":"2022-02-04","objectID":"/repositories/:2:0","tags":[],"title":"Repositories","uri":"/repositories/"},{"categories":["hugo"],"content":"Org github ","date":"2022-02-04","objectID":"/repositories/:3:0","tags":[],"title":"Repositories","uri":"/repositories/"},{"categories":["hugo"],"content":"About Me daoyi ","date":"2022-02-03","objectID":"/about/:1:0","tags":[],"title":"About","uri":"/about/"},{"categories":["hugo"],"content":"Hobbies computer financial/economic quant/hedge zhouyi/zhongyi comics ","date":"2022-02-03","objectID":"/about/:2:0","tags":[],"title":"About","uri":"/about/"},{"categories":["hugo"],"content":"Refine read code python shell c/c++ emacs-lisp efficient tool categories archive self-control windows uTools Quicker Capslock++ geek everything/listary FastKeys emacs spacemacs dylayer _emacs vim spacevim dylayer vimrc download youtube-dl comics github FastgithubUI quant VNPY dymonitor Backtrader Qlib Lean quant-resource tushare AkShare passwd-manager Keepass Keepass2Android uTools-keepass sync jianguoyun Syncthing verysync FoldSync Pro GTD emacs Orgzly (apk) RefTime(apk) telegram telegram X Nekogram X broswer extension Tampermonkey MarkDownload Octotree floccus Onetab Vimium NeatDownloadManager FireShot stylus Microsoft passwd ","date":"2022-02-03","objectID":"/about/:3:0","tags":[],"title":"About","uri":"/about/"},{"categories":["hugo"],"content":"About Site refine techknowledge record life ","date":"2022-02-03","objectID":"/about/:4:0","tags":[],"title":"About","uri":"/about/"},{"categories":["hugo","code"],"content":"简述 采用 markdown 在 Hugo + Github 部署的静态网站上记录个人博客。 Hugo Hugo 是由 Go 语言实现的静态网站生成器。 简单、易用、高效、易扩展、快速部署。 Github github pages 完全免费 可以绑定域名 使用免费的 HTTPS 自己 DIY 网站的主题 使用他人开发好的插件 markdown 记录markdown语法及org-mode语法的一些异同. ","date":"2022-02-03","objectID":"/post/second-markdown/:0:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo","code"],"content":"Edit EDIT Org MarkDown show 粗体 *粗体* **粗体** or __粗体__ 粗体 斜体 /斜体/ *斜体* or _斜体_ 斜体 删除线 +删除线+ ~~删除线~~ 删除线 下划线 _下划线_ \u003cu\u003e下划线\u003c/u\u003e 下划线 等宽 =一字不差= or ~代码~ `一字不差` 一字不差 小号字体 \u003csmall\u003e小号字体\u003c/small\u003e 小号字体 大号字体 \u003cbig\u003e大号字体\u003c/big\u003e 大号字体 2 号字 \u003cfont size=2\u003e2号字\u003c/font\u003e 2号字 字体 \u003cfont face=\"隶书\"\u003e这是隶书\u003c/font\u003e 这是隶书 5号红色华文彩云 \u003cfont face=\"华文彩云\" color=#FF0000 size=5\u003e5号红色华文彩云\u003c/font\u003e 5号红色华文彩云` 颜色字体 $\\color{gold}{金色}$ $\\color{gold}{金色}$ ","date":"2022-02-03","objectID":"/post/second-markdown/:1:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo","code"],"content":"Latex LATEX Org MarkDown show 编号 $a^2+b^2=c^2$ 或者 \\(a^2+b^2=c^2\\) $a^2+b^2=c^2$ $a^2+b^2=c^2$ 不编号 $$a^2+b^2=c^2$\u0026 或者 \\[a^2+b^2=c^2\\] $$a^2+b^2=c^2$$ $a^2+b^2=c^2$ ","date":"2022-02-03","objectID":"/post/second-markdown/:2:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo","code"],"content":"Latex - org \\begin{equation} \\label{eq.mass-energy} E=mc^2 \\end{equation} \\label{eq.mass-energy}是公式的身份标记，eq.mass-energy 是公式唯一的名字。在文中其他位置通过 \\eqref{eq.mass-energy} 即可引用此公式。 ","date":"2022-02-03","objectID":"/post/second-markdown/:3:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo","code"],"content":"Latex - markdown \u003ca id=\"eq.mass-energy\"\u003e\u003c/a\u003e $$E=mc^2\\tag{num} $$ 第一行定义索引 id，num 是公式的手动编号，在文中可通过 [num](#eq.mass-energy) 进行引用。 ","date":"2022-02-03","objectID":"/post/second-markdown/:4:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo","code"],"content":"Link LINK Org MarkDown show - [[Link][Description]] [Description](Link) Description ","date":"2022-02-03","objectID":"/post/second-markdown/:5:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo","code"],"content":"Figure - org #+CAPTION: 标题说明（图表标题） #+NAME: fig.pic-name [[./img/a.jpg]] ","date":"2022-02-03","objectID":"/post/second-markdown/:6:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo","code"],"content":"Figure - markdown ![Description](图片的网络地址或是本地路径) or \u003ca id=\"fig.pic-name\"\u003e\u003c/a\u003e \u003ccenter\u003e \u003cimg src=\"图片的网络地址或是本地路径\" width=\"300px\" alt=\"alt name\"\u003e \u003cdiv\u003e图 1: 图片标题\u003c/div\u003e \u003c/center\u003e\u003cbr\u003e ","date":"2022-02-03","objectID":"/post/second-markdown/:7:0","tags":["markdown","org"],"title":"Second-markdown","uri":"/post/second-markdown/"},{"categories":["hugo,","code"],"content":"简述 采用 emacs org-mde 在 Hugo + Github 部署的静态网站上记录个人博客。 ","date":"2022-02-03","objectID":"/post/first-orgmode/:1:0","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"Hugo Hugo 是由 Go 语言实现的静态网站生成器。 简单、易用、高效、易扩展、快速部署。 ","date":"2022-02-03","objectID":"/post/first-orgmode/:2:0","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"Github github pages 完全免费 可以绑定域名 使用免费的 HTTPS 自己 DIY 网站的主题 使用他人开发好的插件 ","date":"2022-02-03","objectID":"/post/first-orgmode/:3:0","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"Org-mode ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:0","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"Read More 生成的文章要支持 Read More ，在需要分割的地方添加 #more (中间有空格)即可。 ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:1","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"meta #+title: First-orgmode #+Author: daoyi #+date: 2022-02-03T10:41:17+08:00 #+tags[]: org, hugo, emacs #+categories[]: emacs ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:2","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"titile * 一级标题 ** 二级标题 ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:3","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"code cmd M-x org-insert-structure-template hotkey 在 spacemacs 中，使用快捷键 , i b 会弹出一个 minor 窗口，键入 s 即会在光标位置插入代码块，根据实际补充语言名称，最后会生成对应的高亮效果。 原始内容 #+begin_src python def hello(): return \"hello world\" return hello() 渲染效果 def hello(): return \"hello world\" return hello() ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:4","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"image [[/images/emacs/insert-source-code-block.png]] ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:5","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"table 原始内容 | A | B | C | |---+---+---+ | a | b | c | 渲染效果 A B C a b c ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:6","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"footnote spacemacs 添加脚注的快捷键是 , i f 。 sytax [1] 纯数字脚注。和 footnote.el 兼容但是不建议，因为代码段里常常出现[1] [fn:名字] 命名的脚注参考，名字是唯一的标签，或者可以自动地创建成数字。 [fn::内联定义] LaTeX-like 的匿名脚注，定义直接在引用点（reference point）给出。 [fn:名字:定义] 一个内联的 fotnote，也指定名字作为提示。 因为 Org 允许多个引用指向同一个名字，你可以用[fn:name]来创建额外的引用。 example 在这行添加第一个脚注[fn:1]。 在这行添加第二个脚注[fn:2]。 ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:7","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"Footnotes ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:8","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"},{"categories":["hugo,","code"],"content":"org-mode 转义 | 这样的符号在 org 里是需要转义，可以在 spacemacs 中键入 SPC SPC ，输入 org-entities-help 找到对应的转义码。 ","date":"2022-02-03","objectID":"/post/first-orgmode/:4:9","tags":["emacs","org"],"title":"First-orgmode","uri":"/post/first-orgmode/"}]